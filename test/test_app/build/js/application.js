Opal.queue(function(Opal) {/* Generated by Opal 1.5.1 */
  var self = Opal.top, $nesting = [], $$ = Opal.$r($nesting), nil = Opal.nil, $klass = Opal.klass, $def = Opal.def, $send = Opal.send, $hash2 = Opal.hash2, b = nil, c = nil;

  Opal.add_stubs('particle_creator,alert,atome_creator_option,[],box,height,left,smooth,touch,color,length,atomes,top,rotate');
  
  $$('Genesis').$particle_creator("left");
  (function($base, $super) {
    var self = $klass($base, $super, 'Atome');

    
    return $def(self, '$rotate_html', function $$rotate_html(params, _atome) {
      var self = this;

      return self.$alert("#the req params is : " + (params))
    }, 2)
  })($nesting[0], null);
  $$('Genesis').$particle_creator("rotate");
  $send($$('Genesis'), 'atome_creator_option', ["rotate_pre_render_proc"], function $$1(params){var self = $$1.$$s == null ? this : $$1.$$s;

    
    
    if (params == null) params = nil;;
    return self.$alert("rotate params is : " + (params['$[]']("method")));}, {$$arity: 1, $$s: self});
  b = self.$box($hash2(["width", "left", "id"], {"width": 333, "left": 666, "id": "poil"}));
  b.$height(33);
  b.$left(333);
  b.$smooth([33, 2, 90]);
  $send(b, 'touch', [true], function $$2(){var self = $$2.$$s == null ? this : $$2.$$s;

    return self.$color($hash2(["render", "id", "type", "red", "green", "blue", "alpha"], {"render": ["html"], "id": "color_" + ($$('Universe').$atomes().$length()), "type": "color", "red": 1, "green": 0.33, "blue": 0.22, "alpha": 1}))}, {$$arity: 0, $$s: self});
  c = b.$box($hash2(["left"], {"left": 333}));
  b.$top(99);
  return b.$rotate(999);
});
