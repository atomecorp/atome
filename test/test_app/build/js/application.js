Opal.queue(function(Opal) {/* Generated by Opal 1.5.1 */
  var self = Opal.top, $nesting = [], $$ = Opal.$r($nesting), nil = Opal.nil, $hash2 = Opal.hash2, $send = Opal.send, $eqeq = Opal.eqeq, b = nil, c = nil, a = nil;

  Opal.add_stubs('box,height,left,smooth,touch,color,length,atomes,top,rotate,alert,new,drag,shape,puts,==,circle');
  
  b = self.$box($hash2(["width", "left", "id"], {"width": 333, "left": 666, "id": "poil"}));
  b.$height(33);
  b.$left(333);
  b.$smooth([33, 2, 90]);
  $send(b, 'touch', [true], function $$1(){var self = $$1.$$s == null ? this : $$1.$$s;

    return self.$color($hash2(["render", "id", "type", "red", "green", "blue", "alpha"], {"render": ["html"], "id": "color_" + ($$('Universe').$atomes().$length()), "type": "color", "red": 1, "green": 0.33, "blue": 0.22, "alpha": 1}))}, {$$arity: 0, $$s: self});
  c = b.$box($hash2(["left"], {"left": 333}));
  b.$top(99);
  $send(b, 'rotate', [999], function $$2(){var self = $$2.$$s == null ? this : $$2.$$s;

    return self.$alert("poilu")}, {$$arity: 0, $$s: self});
  a = $$('Atome').$new($hash2(["shape"], {"shape": $hash2(["render", "id", "type", "parent", "left", "right", "width", "height", "color"], {"render": ["html"], "id": "crasher", "type": "shape", "parent": "view", "left": 99, "right": 99, "width": 99, "height": 99, "color": $hash2(["render", "id", "type", "red", "green", "blue", "alpha"], {"render": ["html"], "id": "c315", "type": "color", "red": 1, "green": 0.15, "blue": 0.15, "alpha": 0.6})})}));
  $send(a.$shape(), 'drag', [true], function $$3(x, y){var self = $$3.$$s == null ? this : $$3.$$s;

    
    
    if (x == null) x = nil;;
    
    if (y == null) y = nil;;
    return self.$puts("drag position: " + (x));}, {$$arity: 2, $$s: self});
  $send(a.$shape(), 'touch', [true], function $$4(){var self = $$4.$$s == null ? this : $$4.$$s;

    
    if ($eqeq(a.$shape().$drag(), "remove")) {
      a.$shape().$drag(true)
    } else {
      a.$shape().$drag("remove")
    };
    return self.$alert(self.$left());}, {$$arity: 0, $$s: self});
  c = self.$circle();
  c.$color("orange");
  c = self.$circle($hash2(["left"], {"left": 666}));
  c.$color($hash2(["render", "id", "type", "red", "green", "blue", "alpha"], {"render": ["html"], "id": "c3190", "type": "color", "red": 1, "green": 0.6, "blue": 0.15, "alpha": 0.6}));
  return c.$color("orange");
});
