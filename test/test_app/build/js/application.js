Opal.queue(function(Opal) {/* Generated by Opal 1.5.1 */
  var self = Opal.top, $nesting = [], $$ = Opal.$r($nesting), nil = Opal.nil, $send = Opal.send, $truthy = Opal.truthy, $hash2 = Opal.hash2, $gvars = Opal.gvars, anim1 = nil, animation = nil;

  Opal.add_stubs('atome_creator,generate_html_renderer,id,is_a?,instance_exec,to_proc,append_to,DOM,div,[],particle_creator,atome_creator_option,new,puts,class,play');
  
  $$('Genesis').$atome_creator("animation");
  $send($$('Genesis'), 'generate_html_renderer', ["animation"], function $$1(value, atome, proc){var self = $$1.$$s == null ? this : $$1.$$s, id_found = nil;
    if ($gvars.document == null) $gvars.document = nil;

    
    
    if (value == null) value = nil;;
    
    if (atome == null) atome = nil;;
    
    if (proc == null) proc = nil;;
    id_found = self.$id();
    if ($truthy(proc['$is_a?']($$('Proc')))) {
      $send(self, 'instance_exec', [], proc.$to_proc())
    };
    $send(self, 'DOM', [], function $$2(){var self = $$2.$$s == null ? this : $$2.$$s;

      return self.$div($hash2(["id"], {"id": id_found}))}, {$$arity: 0, $$s: self}).$append_to($gvars.document['$[]']("user_view"));
    self.html_object = $gvars.document['$[]'](id_found);
    return (self.html_type = "div");}, {$$arity: 3, $$s: self});
  $$('Genesis').$particle_creator("code");
  $send($$('Genesis'), 'generate_html_renderer', ["code"], function $$3(value, atome, proc){
    
    
    if (value == null) value = nil;;
    
    if (atome == null) atome = nil;;
    
    if (proc == null) proc = nil;;
    return nil;}, 3);
  $send($$('Genesis'), 'particle_creator', ["target"], function $$4(params){
    
    
    if (params == null) params = nil;;
    return nil;}, 1);
  $$('Genesis').$particle_creator("bloc");
  $send($$('Genesis'), 'atome_creator_option', ["bloc_pre_render_proc"], function $$5(params){var self = $$5.$$s == null ? this : $$5.$$s, proc_found = nil;

    
    
    if (params == null) params = nil;;
    proc_found = params['$[]']("value")['$[]']("bloc");
    if ($truthy(proc_found['$is_a?']($$('Proc')))) {
      $send(self, 'instance_exec', [], proc_found.$to_proc())
    };
    return params['$[]']("value");}, {$$arity: 1, $$s: self});
  $send($$('Genesis'), 'generate_html_renderer', ["target"], function $$6(value, atome, proc){var self = $$6.$$s == null ? this : $$6.$$s;
    if (self.html_object == null) self.html_object = nil;

    
    
    if (value == null) value = nil;;
    
    if (atome == null) atome = nil;;
    
    if (proc == null) proc = nil;;
    return self.html_object;}, {$$arity: 3, $$s: self});
  $$('Genesis').$particle_creator("data");
  anim1 = $hash2(["start", "end", "duration", "loop", "curve", "target"], {"start": $hash2(["smooth", "blur", "rotate", "color"], {"smooth": 0, "blur": 0, "rotate": 0, "color": $hash2(["red", "green", "blue"], {"red": 1, "green": 1, "blue": 1})}), "end": $hash2(["smooth", "rotate", "blur", "color"], {"smooth": 25, "rotate": 180, "blur": 20, "color": $hash2(["red", "green", "blue"], {"red": 1, "green": 0, "blue": 0})}), "duration": 1000, "loop": 1, "curve": "easing", "target": "my_shape"});
  animation = $send($$('Atome'), 'new', [$hash2(["animation"], {"animation": $hash2(["render", "id", "type", "parent", "target", "code", "left", "top", "width", "height"], {"render": ["html"], "id": "anim1", "type": "animation", "parent": ["view"], "target": "image1", "code": anim1, "left": 333, "top": 333, "width": 199, "height": 99})})], function $$7(){var self = $$7.$$s == null ? this : $$7.$$s;

    return self.$puts("proc exec added at atome creation level : " + (self.$class()))}, {$$arity: 0, $$s: self});
  $$('Genesis').$particle_creator("play");
  return animation.$play(true);
});
