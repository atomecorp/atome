Opal.queue(function(Opal) {/* Generated by Opal 1.5.1 */
  var self = Opal.top, $nesting = [], $$ = Opal.$r($nesting), nil = Opal.nil, $send = Opal.send, $truthy = Opal.truthy, $def = Opal.def, $hash2 = Opal.hash2, my_video = nil, b = nil;

  Opal.add_stubs('particle_creator,play,html_object,[],bloc,on,is_a?,instance_exec,currentTime,to_proc,atome_creator_option,send,type,pause,generate_html_renderer,currentTime=,new,puts,video,wait,alert,grab,text,box,touch');
  
  $$('Genesis').$particle_creator("play");
  
  $def(self, '$play_video', function $$play_video(params) {
    var proc = $$play_video.$$p || nil, self = this, video_callback = nil, play_callback = nil;

    delete $$play_video.$$p;
    
    ;
    params['$[]']("atome").$html_object().$play();
    video_callback = params['$[]']("atome").$bloc()['$[]']("bloc");
    play_callback = params['$[]']("proc");
    return $send(params['$[]']("atome").$html_object(), 'on', ["timeupdate"], function $$1(e){var self = $$1.$$s == null ? this : $$1.$$s;

      
      
      if (e == null) e = nil;;
      if ($truthy(play_callback['$is_a?']($$('Proc')))) {
        $send(self, 'instance_exec', [params['$[]']("atome").$html_object().$currentTime()], play_callback.$to_proc())
      };
      if ($truthy(video_callback['$is_a?']($$('Proc')))) {
        return $send(self, 'instance_exec', [params['$[]']("atome").$html_object().$currentTime()], video_callback.$to_proc())
      } else {
        return nil
      };}, {$$arity: 1, $$s: self});
  }, 1);
  $send($$('Genesis'), 'atome_creator_option', ["play_pre_render_proc"], function $$2(params){var self = $$2.$$s == null ? this : $$2.$$s, proc_found = nil;

    
    
    if (params == null) params = nil;;
    params['$[]']("atome").$send("play_" + (params['$[]']("atome").$type()), params);
    proc_found = params['$[]']("proc");
    if ($truthy(proc_found['$is_a?']($$('Proc')))) {
      return $send(self, 'instance_exec', ["::call back from play render"], proc_found.$to_proc())
    } else {
      return nil
    };}, {$$arity: 1, $$s: self});
  $$('Genesis').$particle_creator("pause");
  
  $def(self, '$pause_video', function $$pause_video(params) {
    var proc = $$pause_video.$$p || nil, self = this, exec_found = nil;

    delete $$pause_video.$$p;
    
    ;
    params['$[]']("atome").$html_object().$pause();
    exec_found = params['$[]']("atome").$bloc()['$[]']("bloc");
    if ($truthy(exec_found['$is_a?']($$('Proc')))) {
      return $send(self, 'instance_exec', ["::callback from video player"], exec_found.$to_proc())
    } else {
      return nil
    };
  }, 1);
  $send($$('Genesis'), 'atome_creator_option', ["pause_pre_render_proc"], function $$3(params){var self = $$3.$$s == null ? this : $$3.$$s, proc_found = nil;

    
    
    if (params == null) params = nil;;
    params['$[]']("atome").$send("pause_" + (params['$[]']("atome").$type()), params);
    proc_found = params['$[]']("proc");
    if ($truthy(proc_found['$is_a?']($$('Proc')))) {
      return $send(self, 'instance_exec', ["::call back from pause render"], proc_found.$to_proc())
    } else {
      return nil
    };}, {$$arity: 1, $$s: self});
  $$('Genesis').$particle_creator("time");
  $send($$('Genesis'), 'generate_html_renderer', ["time"], function $$4(value, atome, proc){var $a, self = $$4.$$s == null ? this : $$4.$$s;
    if (self.html_object == null) self.html_object = nil;

    
    
    if (value == null) value = nil;;
    
    if (atome == null) atome = nil;;
    
    if (proc == null) proc = nil;;
    return ($a = [value], $send(self.html_object, 'currentTime=', $a), $a[$a.length - 1]);}, {$$arity: 3, $$s: self});
  my_video = $send($$('Atome'), 'new', [$hash2(["video"], {"video": $hash2(["render", "data", "id", "type", "parent", "path", "left", "top", "width", "height"], {"render": ["html"], "data": "dummy", "id": "video1", "type": "video", "parent": ["view"], "path": "./medias/videos/avengers.mp4", "left": 333, "top": 333, "width": 199, "height": 99})})], function $$5(params){var self = $$5.$$s == null ? this : $$5.$$s;

    
    
    if (params == null) params = nil;;
    return self.$puts("video callback here " + (params));}, {$$arity: 1, $$s: self});
  $send(my_video.$video(), 'play', [true], function $$6(currentTime){var self = $$6.$$s == null ? this : $$6.$$s;

    
    
    if (currentTime == null) currentTime = nil;;
    return self.$puts("play callback time is : " + (currentTime));}, {$$arity: 1, $$s: self});
  $send(self, 'wait', [2], function $$7(){var self = $$7.$$s == null ? this : $$7.$$s;

    return $send(my_video.$video(), 'pause', [true], function $$8(p){var self = $$8.$$s == null ? this : $$8.$$s;

      
      
      if (p == null) p = nil;;
      return self.$alert("paused");}, {$$arity: 1, $$s: self})}, {$$arity: 0, $$s: self});
  $send(self.$grab("video1"), 'on', ["pause"], function $$9(event){var self = $$9.$$s == null ? this : $$9.$$s;

    
    
    if (event == null) event = nil;;
    self.$alert("supercool");
    return self.$text($hash2(["data"], {"data": "stopped"}));}, {$$arity: 1, $$s: self});
  b = self.$box();
  return $send(b, 'touch', [true], function $$10(){var self = $$10.$$s == null ? this : $$10.$$s;

    return $send(self.$grab("video1"), 'play', [true], function $$11(event){var self = $$11.$$s == null ? this : $$11.$$s;

      
      
      if (event == null) event = nil;;
      return self.$puts("i am the play callback : " + (event));}, {$$arity: 1, $$s: self})}, {$$arity: 0, $$s: self});
});
